#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <125>;
    quick-tap-ms = <175>;
    hold-trigger-on-release;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp EQUAL   &kp N1          &kp N2          &kp N3            &kp N4              &kp N5       &kp UP_ARROW     &kp N6     &kp N7               &kp N8             &kp N9           &kp N0                  &kp MINUS
&kp TAB     &kp Q           &kp W           &kp E             &kp R               &kp T        &kp DOWN_ARROW   &kp Y      &kp U                &kp I              &kp O            &kp P                   &kp BSLH
&kp ESCAPE  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G        &kp LEFT_ARROW   &kp H      &mt RIGHT_CONTROL J  &mt RIGHT_SHIFT K  &mt LEFT_ALT L   &mt LEFT_WIN SEMICOLON  &kp APOS
&kp LSHFT   &kp Z           &kp X           &kp C             &kp V               &kp B        &kp RIGHT_ARROW  &kp N      &kp M                &kp COMMA          &kp DOT          &kp FSLH                &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL       &kp LEFT_GUI    &mo 2             &kp BACKSPACE       &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER            &mo 1              &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "MAIN";
        };

        layer_1 {
            bindings = <
&kp ESCAPE      &kp F1           &kp F2            &kp F3             &kp F4                &kp F5                   &mmv MOVE_UP     &kp F6        &kp F7        &kp F8        &kp F9      &kp F10       &kp F11
&kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN       &kp HASH           &kp DOLLAR            &kp PERCENT              &mmv MOVE_DOWN   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS   &kp SLASH     &kp F12
&kp TILDE       &kp CARET        &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &mmv MOVE_LEFT   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS    &kp ASTERISK  &kp BACKSPACE
&rgb_ug RGB_ON  &rgb_ug RGB_OFF  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE          &mmv MOVE_RIGHT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp EQUAL     &kp ENTER
&kp C_MUTE      &rgb_ug RGB_EFF  &rgb_ug RGB_BRI   &rgb_ug RGB_BRD    &trans                &trans                   &mkp LCLK        &trans        &kp NUMBER_0  &trans        &trans      &trans
            >;

            display-name = "LAYER1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6    &kp F7    &kp F8        &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans    &trans    &kp F11       &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans    &trans    &sys_reset    &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans    &trans    &trans        &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "LAYER2";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
